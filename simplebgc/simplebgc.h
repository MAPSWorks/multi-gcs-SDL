
typedef struct {
	int16_t roll_acc;
	int16_t roll_gyro;
	int16_t roll_mag;
	int16_t pitch_acc;
	int16_t pitch_gyro;
	int16_t pitch_mag;
	int16_t yaw_acc;
	int16_t yaw_gyro;
	int16_t yaw_mag;
	int16_t debug1;
	int16_t debug2;
	int16_t debug3;
	int16_t debug4;
	int16_t rc_roll;
	int16_t rc_pitch;
	int16_t rc_yaw;
	int16_t rc_cmd;
	int16_t ext_fc_roll;
	int16_t ext_fc_pitch;
	int16_t angle_roll;
	int16_t angle_pitch;
	int16_t angle_yaw;
	uint16_t cycle_time;
	uint16_t i2c_error_count;
	uint8_t error_code;
} SimpleBgcRealtime;


typedef struct {
	uint8_t profile;
	uint8_t roll_p;
	uint8_t roll_i;
	uint8_t roll_d;
	uint8_t roll_power;
	uint8_t roll_invert;
	uint8_t roll_poles;
	uint8_t pitch_p;
	uint8_t pitch_i;
	uint8_t pitch_d;
	uint8_t pitch_power;
	uint8_t pitch_invert;
	uint8_t pitch_poles;
	uint8_t yaw_p;
	uint8_t yaw_i;
	uint8_t yaw_d;
	uint8_t yaw_power;
	uint8_t yaw_invert;
	uint8_t yaw_poles;
	int8_t ext_fc_gain_roll;
	int8_t ext_fc_gain_pitch;
	int16_t roll_rc_min_angle;
	int16_t roll_rc_max_angle;
	uint8_t roll_rc_mode;
	uint8_t roll_rc_lpf;
	uint8_t roll_rc_speed;
	uint8_t roll_rc_follow;
	int16_t pitch_rc_min_angle;
	int16_t pitch_rc_max_angle;
	uint8_t pitch_rc_mode;
	uint8_t pitch_rc_lpf;
	uint8_t pitch_rc_speed;
	uint8_t pitch_rc_follow;
	int16_t yaw_rc_min_angle;
	int16_t yaw_rc_max_angle;
	uint8_t yaw_rc_mode;
	uint8_t yaw_rc_lpf;
	uint8_t yaw_rc_speed;
	uint8_t yaw_rc_follow;
	uint8_t gyro_trust;
	uint8_t use_model;
	uint8_t pwm_freq;
	uint8_t serial_speed;
	int8_t rc_trim_roll;
	int8_t rc_trim_pitch;
	int8_t rc_trim_yaw;
	uint8_t rc_deadband;
	uint8_t rc_expo_rate;
	uint8_t rc_source;
	uint8_t rc_map_roll;
	uint8_t rc_map_pitch;
	uint8_t rc_map_yaw;
	uint8_t rc_map_cmd;
	uint8_t follow_mode;
	uint8_t follow_deadband;
	uint8_t follow_expo_rate;
	uint8_t follow_offset_roll;
	uint8_t follow_offset_pitch;
	int8_t follow_offset_yaw;
	int8_t axis_top;
	int8_t axis_right;
	uint8_t gyro_lpf;
	uint8_t i2c_internal_pullups;
	uint8_t skip_gyro_calib;
	uint8_t rc_cmd_low;
	uint8_t rc_cmd_mid;
	uint8_t rc_cmd_high;
	uint8_t menu_cmd_1;
	uint8_t menu_cmd_2;
	uint8_t menu_cmd_3;
	uint8_t menu_cmd_4;
	uint8_t menu_cmd_5;
	uint8_t menu_cmd_long;
	uint8_t output_roll;
	uint8_t output_pitch;
	uint8_t output_yaw;
	uint8_t reserved_bytes[10];
	uint8_t cur_profile;
} SimpleBgcSetup;

void simplebgc_update (void);
uint8_t simplebgc_connection_status (void);
void simplebgc_init (char *port, uint32_t baud);
void simplebgc_exit (void);
void simplebgc_send_cmd (uint8_t cmd);

extern SimpleBgcSetup simplebgc_setup;

