
SDK_PREFIX = $(shell pwd)/android-dev/android-sdk
NDK_PREFIX = $(shell pwd)/android-dev/android-ndk
ADB        = $(SDK_PREFIX)/platform-tools/adb
NDKBUILD   = $(NDK_PREFIX)/ndk-build
ANDROID    = $(SDK_PREFIX)/tools/android

all:
	rm -f android/jni/src/*
	(cd android/jni/src ; ln -s ../../../* ./)
	rm -rf android/assets
	mkdir -p android/assets
	cp -a data/WMM.COF android/assets/
	cp -a data/map-services.xml android/assets/
	cp -a utils/clean-badmaps.sh android/assets/clean-badmaps.sh
	mkdir -p android/assets/obj3d
	mkdir -p android/assets/textures
	cp -a textures/* android/assets/textures/
	mkdir -p android/assets/fonts
	cp -a fonts/* android/assets/fonts/
	mkdir -p android/assets/rcflow_presets
	cp -a rcflow_presets/* android/assets/rcflow_presets/
	mkdir -p android/assets/scripts
	cp -a screens/screen_tcl.tcl android/assets/scripts/screen_tcl.tcl
	mkdir -p android/assets/mavlink
	cp -a mavlink/ParameterMetaData*.xml android/assets/mavlink/
	mkdir -p android/assets/webserv
	cp -a textures/marker.png android/assets/webserv/marker.png
	cp -a textures/MULTICOPTER.png android/assets/webserv/model.png
	cp -a net/map.js android/assets/webserv/map.js
	cp -a net/webserv-index.html android/assets/webserv/index.html
	cp -a net/style.css android/assets/webserv/style.css
	cp -a net/style.css android/assets/style.css
	cp -a net/favicon.ico android/assets/webserv/favicon.ico
	cp -a net/blender-export.py android/assets/webserv/blender-export.py
	cp -a net/plane.dae android/assets/webserv/plane.dae
	cp -a net/simple.dae android/assets/webserv/simple.dae
	cp -a copyright android/assets/webserv/copyright
	cp -a GPLv2.txt android/assets/webserv/GPLv2.txt
	grep -s -q "jidctfst.S" android/jni/SDL2_image/Android.mk && sed -i "s|jidctfst.S|jidctfst.c|g" android/jni/SDL2_image/Android.mk || true
	grep -s -q "SUPPORT_WEBP := true" android/jni/SDL2_image/Android.mk && sed -i "s|SUPPORT_WEBP := true|SUPPORT_WEBP := false|g" android/jni/SDL2_image/Android.mk || true
	(cd android-dev/opencv-android-sdk/sdk/java/ ; $(ANDROID) update project -s -p ./ -t android-18)
	(cd android ; $(ANDROID) update project -s -p ./ -t android-18)
	(cd android ; $(NDKBUILD))
	(cd android ; ant debug)

install:
	$(ADB) install -r android/bin/MultiGCS-debug.apk

run:
	$(ADB) shell am start -n org.libsdl.app/org.libsdl.app.MultiGCS

shell:
	$(ADB) shell

logcat:
	$(ADB) logcat

tail: logcat

clean:
	(cd android ; $(NDKBUILD) clean)
	rm -f android/ant.properties
	rm -f android/build.properties
	rm -f android/default.properties
	rm -f android/local.properties
	rm -f android/proguard-project.txt
	rm -f android/build.xml
	rm -f android/jni/src/*
	rm -rf android/gen/
	rm -rf android/bin/
	rm -rf android/libs/
	rm -rf android/obj/ 

