<?xml version="1.0" encoding="utf-8"?>
        <!-- Dynamically generated list of documented parameters (generated by param_parse.py) -->    
<paramfile>
<vehicles>
<parameters name="ArduCopter2">
<param humanName="Eeprom format version number" name="ArduCopter:SYSID_SW_MREV" documentation="This value is incremented when changes are made to the eeprom format" user="Advanced">
</param>
<param humanName="Software Type" name="ArduCopter:SYSID_SW_TYPE" documentation="This is used by the ground station to recognise the software type (eg ArduPlane vs ArduCopter)" user="Advanced">
</param>
<param humanName="Mavlink version" name="ArduCopter:SYSID_THISMAV" documentation="Allows reconising the mavlink version" user="Advanced">
</param>
<param humanName="My ground station number" name="ArduCopter:SYSID_MYGCS" documentation="Allows restricting radio overrides to only come from my ground station" user="Advanced">
</param>
<param humanName="Telemetry Baud Rate" name="ArduCopter:SERIAL3_BAUD" documentation="The baud rate used on the telemetry port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry startup delay" name="ArduCopter:TELEM_DELAY" documentation="The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up" user="Standard">
<field name="Range">0 10</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="RTL Altitude" name="ArduCopter:RTL_ALT" documentation="The minimum altitude the model will move to before Returning to Launch.  Set to zero to return at current altitude." user="Standard">
<field name="Range">0 8000</field>
<field name="Increment">1</field>
<field name="Units">Centimeters</field>
</param>
<param humanName="Enable Sonar" name="ArduCopter:SONAR_ENABLE" documentation="Setting this to Enabled(1) will enable the sonar. Setting this to Disabled(0) will disable the sonar" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar type" name="ArduCopter:SONAR_TYPE" documentation="Used to adjust scaling to match the sonar used (only Maxbotix sonars are supported at this time)" user="Standard">
<values>
<value code="0">XL-EZ0 / XL-EZ4</value>
<value code="1">LV-EZ0</value>
<value code="2">XLL-EZ0</value>
<value code="3">HRLV</value>
</values>
</param>
<param humanName="Sonar gain" name="ArduCopter:SONAR_GAIN" documentation="Used to adjust the speed with which the target altitude is changed when objects are sensed below the copter" user="Standard">
<field name="Range">0.01 0.5</field>
<field name="Increment">0.01</field>
</param>
<param humanName="Battery monitoring" name="ArduCopter:BATT_MONITOR" documentation="Controls enabling monitoring of the battery's voltage and current" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="3">Voltage Only</value>
<value code="4">Voltage and Current</value>
</values>
</param>
<param humanName="Battery Failsafe Enable" name="ArduCopter:FS_BATT_ENABLE" documentation="Controls whether failsafe will be invoked when battery voltage or current runs low" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="GPS Failsafe Enable" name="ArduCopter:FS_GPS_ENABLE" documentation="Controls whether failsafe will be invoked when gps signal is lost" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Ground Station Failsafe Enable" name="ArduCopter:FS_GCS_ENABLE" documentation="Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled always RTL</value>
<value code="2">Enabled Continue with Mission in Auto Mode</value>
</values>
</param>
<param humanName="Voltage Divider" name="ArduCopter:VOLT_DIVIDER" documentation="Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin voltage * INPUT_VOLTS/1024 * VOLT_DIVIDER)" user="Advanced">
</param>
<param humanName="Current Amps per volt" name="ArduCopter:AMP_PER_VOLT" documentation="Used to convert the voltage on the current sensing pin (BATT_CURR_PIN) to the actual current being consumed in amps (curr pin voltage * INPUT_VOLTS/1024 * AMP_PER_VOLT )" user="Advanced">
</param>
<param humanName="Battery Capacity" name="ArduCopter:BATT_CAPACITY" documentation="Battery capacity in milliamp-hours (mAh)" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="Enable Compass" name="ArduCopter:MAG_ENABLE" documentation="Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Enable Optical Flow" name="ArduCopter:FLOW_ENABLE" documentation="Setting this to Enabled(1) will enable optical flow. Setting this to Disabled(0) will disable optical flow" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Low Voltage" name="ArduCopter:LOW_VOLT" documentation="Set this to the voltage you want to represent low voltage" user="Standard">
<field name="Range">0 20</field>
<field name="Increment">0.1</field>
</param>
<param humanName="Enable Super Simple Mode" name="ArduCopter:SUPER_SIMPLE" documentation="Setting this to Enabled(1) will enable Super Simple Mode. Setting this to Disabled(0) will disable Super Simple Mode" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="RTL Final Altitude" name="ArduCopter:RTL_ALT_FINAL" documentation="This is the altitude the vehicle will move to as the final stage of Returning to Launch or after completing a mission.  Set to zero to land." user="Standard">
<field name="Range">-1 1000</field>
<field name="Increment">1</field>
<field name="Units">Centimeters</field>
</param>
<param humanName="Battery Voltage sensing pin" name="ArduCopter:BATT_VOLT_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Current sensing pin" name="ArduCopter:BATT_CURR_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 12">A12</value>
</values>
</param>
<param humanName="Receiver RSSI sensing pin" name="ArduCopter:RSSI_PIN" documentation="This selects an analog pin for the receiver RSSI voltage. It assumes the voltage is 5V for max rssi, 0V for minimum" user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Enable Accel based throttle controller" name="ArduCopter:THR_ACC_ENABLE" documentation="This allows enabling and disabling the accelerometer based throttle controller.  If disabled a velocity based controller is used." user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Yaw behaviour during missions" name="ArduCopter:WP_YAW_BEHAVIOR" documentation="Determines how the autopilot controls the yaw during missions and RTL" user="Advanced">
<values>
<value code="0">Never change yaw</value>
<value code=" 1">Face next waypoint</value>
<value code=" 2">Face next waypoint except RTL</value>
</values>
</param>
<param humanName="Waypoint Total" name="ArduCopter:WP_TOTAL" documentation="Total number of commands in the mission stored in the eeprom.  Do not update this parameter directly!" user="Advanced">
</param>
<param humanName="Waypoint Index" name="ArduCopter:WP_INDEX" documentation="The index number of the command that is currently being executed.  Do not update this parameter directly!" user="Advanced">
</param>
<param humanName="Circle radius" name="ArduCopter:CIRCLE_RADIUS" documentation="Defines the radius of the circle the vehicle will fly when in Circle flight mode" user="Standard">
<field name="Range">1 127</field>
<field name="Increment">1</field>
<field name="Units">Meters</field>
</param>
<param humanName="Circle rate" name="ArduCopter:CIRCLE_RATE" documentation="Circle mode's turn rate in degrees / second.  Positive to turn clockwise, negative for counter clockwise" user="Standard">
<field name="Range">-90 90</field>
<field name="Increment">1</field>
<field name="Units">Degrees / second</field>
</param>
<param humanName="RTL loiter time" name="ArduCopter:RTL_LOIT_TIME" documentation="Time (in milliseconds) to loiter above home before begining final descent" user="Standard">
<field name="Range">0 60000</field>
<field name="Increment">1000</field>
<field name="Units">ms</field>
</param>
<param humanName="Land speed" name="ArduCopter:LAND_SPEED" documentation="The descent speed for the final stage of landing in cm/s" user="Standard">
<field name="Range">20 200</field>
<field name="Increment">10</field>
<field name="Units">Centimeters/Second</field>
</param>
<param humanName="Pilot maximum vertical speed" name="ArduCopter:PILOT_VELZ_MAX" documentation="The maximum vertical velocity the pilot may request in cm/s" user="Standard">
<field name="Range">10 500</field>
<field name="Increment">10</field>
<field name="Units">Centimeters/Second</field>
</param>
<param humanName="Minimum Throttle" name="ArduCopter:THR_MIN" documentation="The minimum throttle that will be sent to the motors to keep them spinning" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="Maximum Throttle" name="ArduCopter:THR_MAX" documentation="The maximum throttle that will be sent to the motors" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">ms</field>
</param>
<param humanName="Throttle Failsafe Enable" name="ArduCopter:FS_THR_ENABLE" documentation="The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled always RTL</value>
<value code="2">Enabled Continue with Mission in Auto Mode</value>
</values>
</param>
<param humanName="Throttle Failsafe Value" name="ArduCopter:FS_THR_VALUE" documentation="The PWM level on channel 3 below which throttle sailsafe triggers" user="Standard">
</param>
<param humanName="Throttle Trim" name="ArduCopter:TRIM_THROTTLE" documentation="The autopilot's estimate of the throttle required to maintain a level hover.  Calculated automatically from the pilot's throttle input while in stabilize mode" user="Standard">
<field name="Range">0 1000</field>
<field name="Units">PWM</field>
</param>
<param humanName="Throttle Mid Position" name="ArduCopter:THR_MID" documentation="The throttle output (0 ~ 1000) when throttle stick is in mid position.  Used to scale the manual throttle so that the mid throttle stick position is close to the throttle required to hover" user="Standard">
<field name="Range">300 700</field>
<field name="Increment">1</field>
</param>
<param humanName="Flight Mode 1" name="ArduCopter:FLTMODE1" documentation="Flight mode when Channel 5 pwm is &lt;= 1230" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>
</param>
<param humanName="Flight Mode 2" name="ArduCopter:FLTMODE2" documentation="Flight mode when Channel 5 pwm is &gt;1230, &lt;= 1360" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>

</param>
<param humanName="Flight Mode 3" name="ArduCopter:FLTMODE3" documentation="Flight mode when Channel 5 pwm is &gt;1360, &lt;= 1490" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>

</param>
<param humanName="Flight Mode 4" name="ArduCopter:FLTMODE4" documentation="Flight mode when Channel 5 pwm is &gt;1490, &lt;= 1620" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>

</param>
<param humanName="Flight Mode 5" name="ArduCopter:FLTMODE5" documentation="Flight mode when Channel 5 pwm is &gt;1620, &lt;= 1749" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>

</param>
<param humanName="Flight Mode 6" name="ArduCopter:FLTMODE6" documentation="Flight mode when Channel 5 pwm is &gt;=1750" user="Standard">
<values>
<value code="0">Stabilize</value>
<value code="1">Acro</value>
<value code="2">AltHold</value>
<value code="3">Auto</value>
<value code="4">Guided</value>
<value code="5">Loiter</value>
<value code="6">RTL</value>
<value code="7">Circle</value>
<value code="9">Land</value>
<value code="10">OF_Loiter</value>
<value code="11">Drift</value>
<value code="13">Sport</value>
<value code="16">Hybrid</value>
</values>

</param>
<param humanName="Simple mode bitmask" name="ArduCopter:SIMPLE" documentation="Bitmask which holds which flight modes use simple heading mode (eg bit 0 = 1 means Flight Mode 0 uses simple mode)" user="Advanced">
</param>
<param humanName="Log bitmask" name="ArduCopter:LOG_BITMASK" documentation="2 byte bitmap of log types to enable" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="830">Default</value>
<value code="958">Default+IMU</value>
<value code="1854">Default+Motors</value>
<value code="17214">Default+INav</value>
</values>
</param>
<param humanName="Toy Yaw Rate" name="ArduCopter:TOY_RATE" documentation="Controls yaw rate in Toy mode.  Higher values will cause a slower yaw rate.  Do not set to zero!" user="Advanced">
<field name="Range">1 10</field>
</param>
<param humanName="ESC Calibration" name="ArduCopter:ESC" documentation="Controls whether ArduCopter will enter ESC calibration on the next restart.  Do not adjust this parameter manually." user="Advanced">
<values>
<value code="0">Normal Start-up</value>
<value code="1">Start-up in ESC Calibration mode</value>
</values>
</param>
<param humanName="Channel 6 Tuning" name="ArduCopter:TUNE" documentation="Controls which parameters (normally PID gains) are being tuned with transmitter's channel 6 knob" user="Standard">
<values>
<value code="0">CH6_NONE</value>
<value code="1">CH6_STABILIZE_KP</value>
<value code="2">CH6_STABILIZE_KI</value>
<value code="3">CH6_YAW_KP</value>
<value code="4">CH6_RATE_KP</value>
<value code="5">CH6_RATE_KI</value>
<value code="6">CH6_YAW_RATE_KP</value>
<value code="7">CH6_THROTTLE_KP</value>
<value code="9">CH6_RELAY</value>
<value code="10">CH6_WP_SPEED</value>
<value code="12">CH6_LOITER_KP</value>
<value code="13">CH6_HELI_EXTERNAL_GYRO</value>
<value code="14">CH6_THR_HOLD_KP</value>
<value code="17">CH6_OPTFLOW_KP</value>
<value code="18">CH6_OPTFLOW_KI</value>
<value code="19">CH6_OPTFLOW_KD</value>
<value code="21">CH6_RATE_KD</value>
<value code="22">CH6_LOITER_RATE_KP</value>
<value code="23">CH6_LOITER_RATE_KD</value>
<value code="24">CH6_YAW_KI</value>
<value code="25">CH6_ACRO_KP</value>
<value code="26">CH6_YAW_RATE_KD</value>
<value code="27">CH6_LOITER_KI</value>
<value code="28">CH6_LOITER_RATE_KI</value>
<value code="29">CH6_STABILIZE_KD</value>
<value code="30">CH6_AHRS_YAW_KP</value>
<value code="31">CH6_AHRS_KP</value>
<value code="32">CH6_INAV_TC</value>
<value code="33">CH6_THROTTLE_KI</value>
<value code="34">CH6_THR_ACCEL_KP</value>
<value code="35">CH6_THR_ACCEL_KI</value>
<value code="36">CH6_THR_ACCEL_KD</value>
<value code="38">CH6_DECLINATION</value>
<value code="39">CH6_CIRCLE_RATE</value>
</values>
</param>
<param humanName="Tuning minimum" name="ArduCopter:TUNE_LOW" documentation="The minimum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob" user="Standard">
<field name="Range">0 32767</field>
</param>
<param humanName="Tuning maximum" name="ArduCopter:TUNE_HIGH" documentation="The maximum value that will be applied to the parameter currently being tuned with the transmitter's channel 6 knob" user="Standard">
<field name="Range">0 32767</field>
</param>
<param humanName="Frame Orientation (+, X or V)" name="ArduCopter:FRAME" documentation="Controls motor mixing for multicopters.  Not used for Tri or Traditional Helicopters." user="Standard">
<values>
<value code="0">Plus</value>
<value code=" 1">X</value>
<value code=" 2">V</value>
<value code=" 3">H</value>
</values>
</param>
<param humanName="Channel 7 option" name="ArduCopter:CH7_OPT" documentation="Select which function if performed when CH7 is above 1800 pwm" user="Standard">
<values>
<value code="0">Do Nothing</value>
<value code=" 2">Flip</value>
<value code=" 3">Simple Mode</value>
<value code=" 4">RTL</value>
<value code=" 5">Save Trim</value>
<value code=" 7">Save WP</value>
<value code=" 8">Multi Mode</value>
<value code=" 9">Camera Trigger</value>
<value code=" 10">Sonar</value>
<value code=" 11">Fence</value>
<value code=" 12">ResetToArmedYaw</value>
</values>
</param>
<param humanName="Channel 8 option" name="ArduCopter:CH8_OPT" documentation="Select which function if performed when CH8 is above 1800 pwm" user="Standard">
<values>
<value code="0">Do Nothing</value>
<value code=" 2">Flip</value>
<value code=" 3">Simple Mode</value>
<value code=" 4">RTL</value>
<value code=" 5">Save Trim</value>
<value code=" 7">Save WP</value>
<value code=" 8">Multi Mode</value>
<value code=" 9">Camera Trigger</value>
<value code=" 10">Sonar</value>
<value code=" 11">Fence</value>
<value code=" 12">ResetToArmedYaw</value>
</values>
</param>
<param humanName="Arming check" name="ArduCopter:ARMING_CHECK" documentation="Allows enabling or disabling of pre-arming checks of receiver, accelerometer, barometer and compass" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Rate Pitch Feed Forward" name="ArduCopter:RATE_PIT_FF" documentation="Rate Pitch Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="Rate Roll Feed Forward" name="ArduCopter:RATE_RLL_FF" documentation="Rate Roll Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="Rate Yaw Feed Forward" name="ArduCopter:RATE_YAW_FF" documentation="Rate Yaw Feed Forward (for TradHeli Only)" user="Standard">
<field name="Range">0 10</field>
</param>
<param humanName="ESC Update Speed" name="ArduCopter:RC_SPEED" documentation="This is the speed in Hertz that your ESCs will receive updates" user="Advanced">
<field name="Range">50 490</field>
<field name="Increment">1</field>
<field name="Units">Hz</field>
</param>
<param humanName="Acro P gain" name="ArduCopter:ACRO_P" documentation="Used to convert pilot roll, pitch and yaw input into a dssired rate of rotation in ACRO mode.  Higher values mean faster rate of rotation." user="Standard">
<field name="Range">1 10</field>
</param>
<param humanName="Acro Axis" name="ArduCopter:AXIS_ENABLE" documentation="Used to control whether acro mode actively maintains the current angle when control sticks are released (Enabled = maintains current angle)" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">Enabled</value>
</values>
</param>
<param humanName="Acro Balance Roll" name="ArduCopter:ACRO_BAL_ROLL" documentation="rate at which roll angle returns to level in acro mode" user="Advanced">
<field name="Range">0 300</field>
<field name="Increment">1</field>
</param>
<param humanName="Acro Balance Pitch" name="ArduCopter:ACRO_BAL_PITCH" documentation="rate at which pitch angle returns to level in acro mode" user="Advanced">
<field name="Range">0 300</field>
<field name="Increment">1</field>
</param>
<param humanName="Acro Trainer Enabled" name="ArduCopter:ACRO_TRAINER" documentation="Set to 1 (Enabled) to make roll return to within 45 degrees of level automatically" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Copter LED Mode" name="ArduCopter:LED_MODE" documentation="bitmap to control the copter led mode" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enable</value>
<value code="2">GPS On</value>
<value code="4">Aux</value>
<value code="8">Buzzer</value>
<value code="16">Oscillate</value>
<value code="32">Nav Blink</value>
<value code="64">GPS Nav Blink</value>
</values>
</param>
<param humanName="Roll axis rate controller P gain" name="ArduCopter:RATE_RLL_P" documentation="Roll axis rate controller P gain.  Converts the difference between desired roll rate and actual roll rate into a motor speed output" user="Standard">
<field name="Range">0.08 0.20</field>
</param>
<param humanName="Roll axis rate controller I gain" name="ArduCopter:RATE_RLL_I" documentation="Roll axis rate controller I gain.  Corrects long-term difference in desired roll rate vs actual roll rate" user="Standard">
<field name="Range">0.01 0.5</field>
</param>
<param humanName="Roll axis rate controller I gain maximum" name="ArduCopter:RATE_RLL_IMAX" documentation="Roll axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Roll axis rate controller D gain" name="ArduCopter:RATE_RLL_D" documentation="Roll axis rate controller D gain.  Compensates for short-term change in desired roll rate vs actual roll rate" user="Standard">
<field name="Range">0.001 0.008</field>
</param>
<param humanName="Pitch axis rate controller P gain" name="ArduCopter:RATE_PIT_P" documentation="Pitch axis rate controller P gain.  Converts the difference between desired pitch rate and actual pitch rate into a motor speed output" user="Standard">
<field name="Range">0.08 0.20</field>
</param>
<param humanName="Pitch axis rate controller I gain" name="ArduCopter:RATE_PIT_I" documentation="Pitch axis rate controller I gain.  Corrects long-term difference in desired pitch rate vs actual pitch rate" user="Standard">
<field name="Range">0.01 0.5</field>
</param>
<param humanName="Pitch axis rate controller I gain maximum" name="ArduCopter:RATE_PIT_IMAX" documentation="Pitch axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Pitch axis rate controller D gain" name="ArduCopter:RATE_PIT_D" documentation="Pitch axis rate controller D gain.  Compensates for short-term change in desired pitch rate vs actual pitch rate" user="Standard">
<field name="Range">0.001 0.008</field>
</param>
<param humanName="Yaw axis rate controller P gain" name="ArduCopter:RATE_YAW_P" documentation="Yaw axis rate controller P gain.  Converts the difference between desired yaw rate and actual yaw rate into a motor speed output" user="Standard">
<field name="Range">0.150 0.250</field>
</param>
<param humanName="Yaw axis rate controller I gain" name="ArduCopter:RATE_YAW_I" documentation="Yaw axis rate controller I gain.  Corrects long-term difference in desired yaw rate vs actual yaw rate" user="Standard">
<field name="Range">0.010 0.020</field>
</param>
<param humanName="Yaw axis rate controller I gain maximum" name="ArduCopter:RATE_YAW_IMAX" documentation="Yaw axis rate controller I gain maximum.  Constrains the maximum motor output that the I gain will output" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Yaw axis rate controller D gain" name="ArduCopter:RATE_YAW_D" documentation="Yaw axis rate controller D gain.  Compensates for short-term change in desired yaw rate vs actual yaw rate" user="Standard">
<field name="Range">0.000 0.001</field>
</param>
<param humanName="Loiter latitude rate controller P gain" name="ArduCopter:LOITER_LAT_P" documentation="Loiter latitude rate controller P gain.  Converts the difference between desired speed and actual speed into a lean angle in the latitude direction" user="Standard">
<field name="Range">2.000 6.000</field>
</param>
<param humanName="Loiter latitude rate controller I gain" name="ArduCopter:LOITER_LAT_I" documentation="Loiter latitude rate controller I gain.  Corrects long-term difference in desired speed and actual speed in the latitude direction" user="Standard">
<field name="Range">0.020 0.060</field>
</param>
<param humanName="Loiter rate controller I gain maximum" name="ArduCopter:LOITER_LAT_IMAX" documentation="Loiter rate controller I gain maximum.  Constrains the lean angle that the I gain will output" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Loiter latitude rate controller D gain" name="ArduCopter:LOITER_LAT_D" documentation="Loiter latitude rate controller D gain.  Compensates for short-term change in desired speed vs actual speed" user="Standard">
<field name="Range">0.200 0.600</field>
</param>
<param humanName="Loiter longitude rate controller P gain" name="ArduCopter:LOITER_LON_P" documentation="Loiter longitude rate controller P gain.  Converts the difference between desired speed and actual speed into a lean angle in the longitude direction" user="Standard">
<field name="Range">2.000 6.000</field>
</param>
<param humanName="Loiter longitude rate controller I gain" name="ArduCopter:LOITER_LON_I" documentation="Loiter longitude rate controller I gain.  Corrects long-term difference in desired speed and actual speed in the longitude direction" user="Standard">
<field name="Range">0.020 0.060</field>
</param>
<param humanName="Loiter longitude rate controller I gain maximum" name="ArduCopter:LOITER_LON_IMAX" documentation="Loiter longitude rate controller I gain maximum.  Constrains the lean angle that the I gain will output" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Loiter longituderate controller D gain" name="ArduCopter:LOITER_LON_D" documentation="Loiter longitude rate controller D gain.  Compensates for short-term change in desired speed vs actual speed" user="Standard">
<field name="Range">0.200 0.600</field>
</param>
<param humanName="Throttle rate controller P gain" name="ArduCopter:THR_RATE_P" documentation="Throttle rate controller P gain.  Converts the difference between desired vertical speed and actual speed into a desired acceleration that is passed to the throttle acceleration controller" user="Standard">
<field name="Range">1.000 8.000</field>
</param>
<param humanName="Throttle rate controller I gain" name="ArduCopter:THR_RATE_I" documentation="Throttle rate controller I gain.  Corrects long-term difference in desired vertical speed and actual speed" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Throttle rate controller I gain maximum" name="ArduCopter:THR_RATE_IMAX" documentation="Throttle rate controller I gain maximum.  Constrains the desired acceleration that the I gain will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">cm/s/s</field>
</param>
<param humanName="Throttle rate controller D gain" name="ArduCopter:THR_RATE_D" documentation="Throttle rate controller D gain.  Compensates for short-term change in desired vertical speed vs actual speed" user="Standard">
<field name="Range">0.000 0.400</field>
</param>
<param humanName="Throttle acceleration controller P gain" name="ArduCopter:THR_ACCEL_P" documentation="Throttle acceleration controller P gain.  Converts the difference between desired vertical acceleration and actual acceleration into a motor output" user="Standard">
<field name="Range">0.500 1.500</field>
</param>
<param humanName="Throttle acceleration controller I gain" name="ArduCopter:THR_ACCEL_I" documentation="Throttle acceleration controller I gain.  Corrects long-term difference in desired vertical acceleration and actual acceleration" user="Standard">
<field name="Range">0.000 3.000</field>
</param>
<param humanName="Throttle acceleration controller I gain maximum" name="ArduCopter:THR_ACCEL_IMAX" documentation="Throttle acceleration controller I gain maximum.  Constrains the maximum pwm that the I term will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">PWM</field>
</param>
<param humanName="Throttle acceleration controller D gain" name="ArduCopter:THR_ACCEL_D" documentation="Throttle acceleration controller D gain.  Compensates for short-term change in desired vertical acceleration vs actual acceleration" user="Standard">
<field name="Range">0.000 0.400</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis P gain" name="ArduCopter:OF_RLL_P" documentation="Optical Flow based loiter controller roll axis P gain.  Converts the position error from the target point to a roll angle" user="Standard">
<field name="Range">2.000 3.000</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis I gain" name="ArduCopter:OF_RLL_I" documentation="Optical Flow based loiter controller roll axis I gain.  Corrects long-term position error by more persistently rolling left or right" user="Standard">
<field name="Range">0.250 0.750</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis I gain maximum" name="ArduCopter:OF_RLL_IMAX" documentation="Optical Flow based loiter controller roll axis I gain maximum.  Constrains the maximum roll angle that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Optical Flow based loiter controller roll axis D gain" name="ArduCopter:OF_RLL_D" documentation="Optical Flow based loiter controller roll axis D gain.  Compensates for short-term change in speed in the roll direction" user="Standard">
<field name="Range">0.100 0.140</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis P gain" name="ArduCopter:OF_PIT_P" documentation="Optical Flow based loiter controller pitch axis P gain.  Converts the position error from the target point to a pitch angle" user="Standard">
<field name="Range">2.000 3.000</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis I gain" name="ArduCopter:OF_PIT_I" documentation="Optical Flow based loiter controller pitch axis I gain.  Corrects long-term position error by more persistently pitching left or right" user="Standard">
<field name="Range">0.250 0.750</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis I gain maximum" name="ArduCopter:OF_PIT_IMAX" documentation="Optical Flow based loiter controller pitch axis I gain maximum.  Constrains the maximum pitch angle that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees</field>
</param>
<param humanName="Optical Flow based loiter controller pitch axis D gain" name="ArduCopter:OF_PIT_D" documentation="Optical Flow based loiter controller pitch axis D gain.  Compensates for short-term change in speed in the pitch direction" user="Standard">
<field name="Range">0.100 0.140</field>
</param>
<param humanName="Roll axis stabilize controller P gain" name="ArduCopter:STB_RLL_P" documentation="Roll axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired roll angle and actual angle to a desired roll rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Roll axis stabilize controller I gain" name="ArduCopter:STB_RLL_I" documentation="Roll axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired roll angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Roll axis stabilize controller I gain maximum" name="ArduCopter:STB_RLL_IMAX" documentation="Roll axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum roll rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Pitch axis stabilize controller P gain" name="ArduCopter:STB_PIT_P" documentation="Pitch axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired pitch angle and actual angle to a desired pitch rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Pitch axis stabilize controller I gain" name="ArduCopter:STB_PIT_I" documentation="Pitch axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired pitch angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Pitch axis stabilize controller I gain maximum" name="ArduCopter:STB_PIT_IMAX" documentation="Pitch axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum pitch rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Yaw axis stabilize controller P gain" name="ArduCopter:STB_YAW_P" documentation="Yaw axis stabilize (i.e. angle) controller P gain.  Converts the error between the desired yaw angle and actual angle to a desired yaw rate" user="Standard">
<field name="Range">3.000 6.000</field>
</param>
<param humanName="Yaw axis stabilize controller I gain" name="ArduCopter:STB_YAW_I" documentation="Yaw axis stabilize (i.e. angle) controller I gain.  Corrects for longer-term difference in desired yaw angle and actual angle" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Yaw axis stabilize controller I gain maximum" name="ArduCopter:STB_YAW_IMAX" documentation="Yaw axis stabilize (i.e. angle) controller I gain maximum.  Constrains the maximum yaw rate that the I term will generate" user="Standard">
<field name="Range">0 4500</field>
<field name="Units">Centi-Degrees/Sec</field>
</param>
<param humanName="Altitude controller P gain" name="ArduCopter:THR_ALT_P" documentation="Altitude controller P gain.  Converts the difference between the desired altitude and actual altitude into a climb or descent rate which is passed to the throttle rate controller" user="Standard">
<field name="Range">1.000 3.000</field>
</param>
<param humanName="Altitude controller I gain" name="ArduCopter:THR_ALT_I" documentation="Altitude controller I gain.  Corrects for longer-term difference in desired altitude and actual altitude" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Altitude controller I gain maximum" name="ArduCopter:THR_ALT_IMAX" documentation="Altitude controller I gain maximum.  Constrains the maximum climb rate rate that the I term will generate" user="Standard">
<field name="Range">0 500</field>
<field name="Units">cm/s</field>
</param>
<param humanName="Loiter latitude position controller P gain" name="ArduCopter:HLD_LAT_P" documentation="Loiter latitude position controller P gain.  Converts the distance (in the latitude direction) to the target location into a desired speed which is then passed to the loiter latitude rate controller" user="Standard">
<field name="Range">0.100 0.300</field>
</param>
<param humanName="Loiter latitude position controller I gain" name="ArduCopter:HLD_LAT_I" documentation="Loiter latitude position controller I gain.  Corrects for longer-term distance (in latitude) to the target location" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Loiter latitude position controller I gain maximum" name="ArduCopter:HLD_LAT_IMAX" documentation="Loiter latitude position controller I gain maximum.  Constrains the maximum desired speed that the I term will generate" user="Standard">
<field name="Range">0 3000</field>
<field name="Units">cm/s</field>
</param>
<param humanName="Loiter longitude position controller P gain" name="ArduCopter:HLD_LON_P" documentation="Loiter longitude position controller P gain.  Converts the distance (in the longitude direction) to the target location into a desired speed which is then passed to the loiter longitude rate controller" user="Standard">
<field name="Range">0.100 0.300</field>
</param>
<param humanName="Loiter longitude position controller I gain" name="ArduCopter:HLD_LON_I" documentation="Loiter longitude position controller I gain.  Corrects for longer-term distance (in longitude direction) to the target location" user="Standard">
<field name="Range">0.000 0.100</field>
</param>
<param humanName="Loiter longitudeposition controller I gain maximum" name="ArduCopter:HLD_LON_IMAX" documentation="Loiter  longitudeposition controller I gain maximum.  Constrains the maximum desired speed that the I term will generate" user="Standard">
<field name="Range">0 3000</field>
<field name="Units">cm/s</field>
</param>
</parameters>
<parameters name="APMrover2">
<param humanName="Log bitmask" name="APMrover2:LOG_BITMASK" documentation="Two byte bitmap of log types to enable in dataflash" user="Advanced">
<values>
<value code="0">Disabled</value>
<value code="3950">Default</value>
<value code="4078">Default+IMU</value>
</values>
</param>
<param humanName="Initial driving mode" name="APMrover2:INITIAL_MODE" documentation="This selects the mode to start in on boot. This is useful for when you want to start in AUTO mode on boot without a receiver. Usuallly used in combination with when AUTO_TRIGGER_PIN or AUTO_KICKSTART." user="Advanced">
<values>
<value code="0">MANUAL</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">AUTO</value>
<value code="11">RTL</value>
<value code="15">GUIDED</value>
</values>
</param>
<param humanName="Receiver RSSI sensing pin" name="APMrover2:RSSI_PIN" documentation="This selects an analog pin for the receiver RSSI voltage. It assumes the voltage is 5V for max rssi, 0V for minimum" user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Voltage sensing pin" name="APMrover2:BATT_VOLT_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 0">A0</value>
<value code=" 1">A1</value>
<value code=" 13">A13</value>
</values>
</param>
<param humanName="Battery Current sensing pin" name="APMrover2:BATT_CURR_PIN" documentation="Setting this to 0 ~ 13 will enable battery current sensing on pins A0 ~ A13." user="Standard">
<values>
<value code="-1">Disabled</value>
<value code=" 1">A1</value>
<value code=" 2">A2</value>
<value code=" 12">A12</value>
</values>
</param>
<param humanName="MAVLink system ID" name="APMrover2:SYSID_THIS_MAV" documentation="ID used in MAVLink protocol to identify this vehicle" user="Advanced">
</param>
<param humanName="MAVLink ground station ID" name="APMrover2:SYSID_MYGCS" documentation="ID used in MAVLink protocol to identify the controlling ground station" user="Advanced">
</param>
<param humanName="USB Console Baud Rate" name="APMrover2:SERIAL0_BAUD" documentation="The baud rate used on the first serial port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry Baud Rate" name="APMrover2:SERIAL3_BAUD" documentation="The baud rate used on the telemetry port" user="Standard">
<values>
<value code="1">1200</value>
<value code="2">2400</value>
<value code="4">4800</value>
<value code="9">9600</value>
<value code="19">19200</value>
<value code="38">38400</value>
<value code="57">57600</value>
<value code="111">111100</value>
<value code="115">115200</value>
</values>
</param>
<param humanName="Telemetry startup delay " name="APMrover2:TELEM_DELAY" documentation="The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up" user="Standard">
<field name="Range">0 10</field>
<field name="Increment">1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Magnetometer (compass) enabled" name="APMrover2:MAG_ENABLED" documentation="This should be set to 1 if a compass is installed" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Battery monitoring" name="APMrover2:BATT_MONITOR" documentation="Controls enabling monitoring of the battery's voltage and current" user="Standard">
<values>
<value code="0">Disabled</value>
<value code="3">Voltage Only</value>
<value code="4">Voltage and Current</value>
</values>
</param>
<param humanName="Voltage Divider" name="APMrover2:VOLT_DIVIDER" documentation="Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin voltage * INPUT_VOLTS/1024 * VOLT_DIVIDER)" user="Advanced">
</param>
<param humanName="Current Amps per volt" name="APMrover2:AMP_PER_VOLT" documentation="Used to convert the voltage on the current sensing pin (BATT_CURR_PIN) to the actual current being consumed in amps (curr pin voltage * INPUT_VOLTS/1024 * AMP_PER_VOLT )" user="Advanced">
</param>
<param humanName="Battery Capacity" name="APMrover2:BATT_CAPACITY" documentation="Battery capacity in milliamp-hours (mAh)" user="Standard">
<field name="Units">mAh</field>
</param>
<param humanName="Crosstrack Gain" name="APMrover2:XTRK_GAIN_SC" documentation="This controls how hard the Rover tries to follow the lines between waypoints, as opposed to driving directly to the next waypoint. The value is the scale between distance off the line and angle to meet the line (in Degrees * 100)" user="Standard">
<field name="Range">0 2000</field>
<field name="Increment">1</field>
</param>
<param humanName="Crosstrack Entry Angle" name="APMrover2:XTRK_ANGLE_CD" documentation="Maximum angle used to correct for track following." user="Standard">
<field name="Range">0 9000</field>
<field name="Increment">1</field>
<field name="Units">centi-Degrees</field>
</param>
<param humanName="Auto mode trigger pin" name="APMrover2:AUTO_TRIGGER_PIN" documentation="pin number to use to trigger start of auto mode. If set to -1 then don't use a trigger, otherwise this is a pin number which if held low in auto mode will start the motor, and otherwise will force the throttle off. This can be used in combination with INITIAL_MODE to give a 'press button to start' rover with no receiver." user="standard">
<values>
<value code="-1">Disabled</value>
<value code="0-9">TiggerPin</value>
</values>
</param>
<param humanName="Auto mode trigger kickstart acceleration" name="APMrover2:AUTO_KICKSTART" documentation="X acceleration in meters/second/second to use to trigger the motor start in auto mode. If set to zero then auto throttle starts immediately when the mode switch happens, otherwise the rover waits for the X acceleration to go above this value before it will start the motor" user="standard">
<field name="Range">0 20</field>
<field name="Increment">0.1</field>
<field name="Units">m/s/s</field>
</param>
<param humanName="Target cruise speed in auto modes" name="APMrover2:CRUISE_SPEED" documentation="The target speed in auto missions." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">m/s</field>
</param>
<param humanName="Target speed reduction while turning" name="APMrover2:SPEED_TURN_GAIN" documentation="The percentage to reduce the throttle while turning. If this is 100% then the target speed is not reduced while turning. If this is 50% then the target speed is reduced in proportion to the turn rate, with a reduction of 50% when the steering is maximally deflected." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">percent</field>
</param>
<param humanName="Distance to turn to start reducing speed" name="APMrover2:SPEED_TURN_DIST" documentation="The distance to the next turn at which the rover reduces its target speed by the SPEED_TURN_GAIN" user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">meters</field>
</param>
<param humanName="Channel 7 option" name="APMrover2:CH7_OPTION" documentation="What to do use channel 7 for" user="Standard">
<values>
<value code="0">Nothing</value>
<value code="1">LearnWaypoint</value>
</values>
</param>
<param humanName="Minimum Throttle" name="APMrover2:THR_MIN" documentation="The minimum throttle setting to which the autopilot will apply. This is mostly useful for rovers with internal combustion motors, to prevent the motor from cutting out in auto mode." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Maximum Throttle" name="APMrover2:THR_MAX" documentation="The maximum throttle setting to which the autopilot will apply. This can be used to prevent overheating a ESC or motor on an electric rover." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Base throttle percentage in auto" name="APMrover2:CRUISE_THROTTLE" documentation="The base throttle percentage to use in auto mode. The CRUISE_SPEED parameter controls the target speed, but the rover starts with the CRUISE_THROTTLE setting as the initial estimate for how much throttle is needed to achieve that speed. It then adjusts the throttle based on how fast the rover is actually going." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Throttle slew rate" name="APMrover2:THR_SLEWRATE" documentation="maximum percentage change in throttle per second. A setting of 10 means to not change the throttle by more than 10% of the full throttle range in one second. A value of zero means no limit." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">1</field>
<field name="Units">Percent</field>
</param>
<param humanName="Skid steering output" name="APMrover2:SKID_STEER_OUT" documentation="Set this to 1 for skid steering controlled rovers (tank track style). When enabled, servo1 is used for the left track control, servo3 is used for right track control" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">SkidSteeringOutput</value>
</values>
</param>
<param humanName="Skid steering input" name="APMrover2:SKID_STEER_IN" documentation="Set this to 1 for skid steering input rovers (tank track style in RC controller). When enabled, servo1 is used for the left track control, servo3 is used for right track control" user="Standard">
<values>
<value code="0">Disabled</value>
<value code=" 1">SkidSteeringInput</value>
</values>
</param>
<param humanName="Failsafe Action" name="APMrover2:FS_ACTION" documentation="What to do on a failsafe event" user="Standard">
<values>
<value code="0">Nothing</value>
<value code="1">RTL</value>
<value code="2">HOLD</value>
</values>
</param>
<param humanName="Failsafe timeout" name="APMrover2:FS_TIMEOUT" documentation="How long a failsafe event need to happen for before we trigger the failsafe action" user="Standard">
<field name="Units">seconds</field>
</param>
<param humanName="Throttle Failsafe Enable" name="APMrover2:FS_THR_ENABLE" documentation="The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel to a low value. This can be used to detect the RC transmitter going out of range. Failsafe will be triggered when the throttle channel goes below the FS_THR_VALUE for FS_TIMEOUT seconds." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Throttle Failsafe Value" name="APMrover2:FS_THR_VALUE" documentation="The PWM level on channel 3 below which throttle sailsafe triggers." user="Standard">
</param>
<param humanName="GCS failsafe enable" name="APMrover2:FS_GCS_ENABLE" documentation="Enable ground control station telemetry failsafe. When enabled the Rover will execute the FS_ACTION when it fails to receive MAVLink heartbeat packets for FS_TIMEOUT seconds." user="Standard">
<values>
<value code="0">Disabled</value>
<value code="1">Enabled</value>
</values>
</param>
<param humanName="Sonar trigger distance" name="APMrover2:SONAR_TRIGGER_CM" documentation="The distance from an obstacle in centimeters at which the sonar triggers a turn to avoid the obstacle" user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">1</field>
<field name="Units">centimeters</field>
</param>
<param humanName="Sonar trigger angle" name="APMrover2:SONAR_TURN_ANGLE" documentation="The course deviation in degrees to apply while avoiding an obstacle detected with the sonar. A positive number means to turn right, and a negative angle means to turn left." user="Standard">
<field name="Range">-45 45</field>
<field name="Increment">1</field>
<field name="Units">centimeters</field>
</param>
<param humanName="Sonar turn time" name="APMrover2:SONAR_TURN_TIME" documentation="The amount of time in seconds to apply the SONAR_TURN_ANGLE after detecting an obstacle." user="Standard">
<field name="Range">0 100</field>
<field name="Increment">0.1</field>
<field name="Units">seconds</field>
</param>
<param humanName="Sonar debounce count" name="APMrover2:SONAR_DEBOUNCE" documentation="The number of 50Hz sonar hits needed to trigger an obstacle avoidance event. If you get a lot of false sonar events then raise this number, but if you make it too large then it will cause lag in detecting obstacles, which could cause you go hit the obstacle." user="Standard">
<field name="Range">1 100</field>
<field name="Increment">1</field>
</param>
<param humanName="Mode channel" name="APMrover2:MODE_CH" documentation="RC Channel to use for driving mode control" user="Advanced">
</param>
<param humanName="Mode1" name="APMrover2:MODE1" documentation="Driving mode for switch position 1 (910 to 1230 and above 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode2" name="APMrover2:MODE2" documentation="Driving mode for switch position 2 (1231 to 1360)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode3" name="APMrover2:MODE3" documentation="Driving mode for switch position 3 (1361 to 1490)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode4" name="APMrover2:MODE4" documentation="Driving mode for switch position 4 (1491 to 1620)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode5" name="APMrover2:MODE5" documentation="Driving mode for switch position 5 (1621 to 1749)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Mode6" name="APMrover2:MODE6" documentation="Driving mode for switch position 6 (1750 to 2049)" user="Standard">
<values>
<value code="0">Manual</value>
<value code="2">LEARNING</value>
<value code="3">STEERING</value>
<value code="4">HOLD</value>
<value code="10">Auto</value>
<value code="11">RTL</value>
<value code="15">Guided</value>
</values>
</param>
<param humanName="Waypoint radius" name="APMrover2:WP_RADIUS" documentation="The distance in meters from a waypoint when we consider the waypoint has been reached. This determines when the rover will turn along the next waypoint path." user="Standard">
<field name="Range">0 1000</field>
<field name="Increment">0.1</field>
<field name="Units">meters</field>
</param>
</parameters>
</vehicles>
</paramfile>
